{% comment %}
  Renders a product media gallery. Should be used with 'media-gallery.js'
  Also see 'product-media-modal'

  Accepts:
  - product: {Object} Product liquid object
  - variant_images: {Array} Product images associated with a variant
  - is_duplicate: {Boolean} Prevents rendering uneeded elements and duplicate ids for subsequent instances

  Usage:
  {% render 'product-media-gallery', is_duplicate: true %}
{% endcomment %}

{%- liquid
  if section.settings.hide_variants and variant_images.size == product.media.size
    assign single_media_visible = true
  endif

  assign media_count = product.media.size
  if section.settings.hide_variants and media_count > 1 and variant_images.size > 0
    assign media_count = media_count | minus: variant_images.size | plus: 1
  endif
-%}

<media-gallery
  id="MediaGallery-{{ section.id }}{{ id_append }}"
  role="region"
  {% if section.settings.enable_sticky_info %}
    class="product__column-sticky"
  {% endif %}
  aria-label="{{ 'products.product.media.gallery_viewer' | t }}"
  data-desktop-layout="{{ section.settings.gallery_layout }}"
>
  <div class="splide carousel">
  <div id="GalleryStatus-{{ section.id }}" class="visually-hidden" role="status"></div>

  <slider-component id="GalleryViewer-{{ section.id }}{{ id_append }}" class="slider-mobile-gutter splide__track">
    {%- unless is_duplicate -%}
      <a class="skip-to-content-link button visually-hidden quick-add-hidden" href="#ProductInfo-{{ section.id }}">
        {{ 'accessibility.skip_to_product_info' | t }}
      </a>
    {%- endunless -%}
    <ul
      id="Slider-Gallery-{{ section.id }}{{ id_append }}"
      class="product__media-list contains-media grid grid--peek list-unstyled slider slider--mobile splide__list"
      role="list"
    >
      {%- if product.selected_or_first_available_variant.featured_media != null -%}
        {%- assign featured_media = product.selected_or_first_available_variant.featured_media -%}
        <li
          id="Slide-{{ section.id }}-{{ featured_media.id }}{{ id_append }}"
          class="product__media-item grid__item slider__slide is-active{% if single_media_visible %} product__media-item--single{% endif %}{% if featured_media.media_type != 'image' %} product__media-item--full{% endif %}{% if section.settings.hide_variants and variant_images contains featured_media.src %} product__media-item--variant{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %} splide__slide"
          data-media-id="{{ section.id }}-{{ featured_media.id }}"
        >
          {%- assign media_position = 1 -%}
          {% render 'product-thumbnail',
            media: featured_media,
            media_count: media_count,
            position: media_position,
            desktop_layout: section.settings.gallery_layout,
            mobile_layout: section.settings.mobile_thumbnails,
            loop: section.settings.enable_video_looping,
            modal_id: section.id,
            xr_button: true,
            media_width: media_width,
            media_fit: section.settings.media_fit,
            constrain_to_viewport: section.settings.constrain_to_viewport,
            lazy_load: false
          %}
        </li>
      {%- endif -%}
      {%- for media in product.media -%}
        <li
          id="Slide-{{ section.id }}-{{ media.id }}{{ id_append }}"
          class="product__media-item grid__item slider__slide{% if single_media_visible %} product__media-item--single{% endif %}{% if product.selected_or_first_available_variant.featured_media == null and forloop.index == 1 %} is-active{% endif %}{% if media.media_type != 'image' %} product__media-item--full{% endif %}{% if section.settings.hide_variants and variant_images contains media.src %} product__media-item--variant{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %} splide__slide"
          data-media-id="{{ section.id }}-{{ media.id }}"
        >
          {%- liquid
            assign media_position = media_position | default: 0 | plus: 1
            assign lazy_load = false
            if media_position > 1
              assign lazy_load = true
            endif
          -%}
          {% render 'product-thumbnail',
            media: media,
            media_count: media_count,
            position: media_position,
            desktop_layout: section.settings.gallery_layout,
            mobile_layout: section.settings.mobile_thumbnails,
            loop: section.settings.enable_video_looping,
            modal_id: section.id,
            xr_button: true,
            media_width: media_width,
            media_fit: section.settings.media_fit,
            constrain_to_viewport: section.settings.constrain_to_viewport,
            lazy_load: lazy_load
          %}
        </li>
      {%- endfor -%}
    </ul>
  </slider-component>
</div>
</media-gallery>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    // Check window width before executing the script
    if (window.innerWidth <= 749) {
      function updateDots() {
        // Select the ul element with class product__media-list
        var productList = document.querySelector('.product__media-list');

        // Select all li elements inside productList that don't have the specified class
        var nonVariantItems = productList.querySelectorAll('li:not(.product__media-item.product__media-item--variant)');

        // Check if there are more than one non-variant items
        if (nonVariantItems.length > 1) {
          // Remove any existing dots container
          var dotsContainer = document.querySelector('.dots__container');
          if (dotsContainer) {
            dotsContainer.parentNode.removeChild(dotsContainer);
          }

          // Create a new dots container
          dotsContainer = document.createElement('div');
          dotsContainer.className = 'dots__container';

          // Iterate through each non-variant item
          nonVariantItems.forEach(function(item) {
            // Create a new div element for the dot
            var dot = document.createElement('div');
            dot.className = 'dots';
            dot.textContent = '.';

            // Append the dot to the dots container
            dotsContainer.appendChild(dot);
          });

          // Append the dots container to the appropriate parent element
          var parentElement = nonVariantItems[0].closest('.grid__item.product__media-wrapper');
          parentElement.appendChild(dotsContainer);
        } else {
          // If there's only one or zero non-variant items, remove any existing dots container
          var existingDotsContainer = document.querySelector('.dots__container');
          if (existingDotsContainer) {
            existingDotsContainer.parentNode.removeChild(existingDotsContainer);
          }
        }
      }

      // Update dots on page load
      updateDots();

      // Select variant input elements and attach event listener to update dots
      var variantInputs = document.querySelectorAll('.variant-radios input[type="radio"]');
      variantInputs.forEach(function(input) {
        input.addEventListener('input', updateDots);
      });
    }
  });
</script>
